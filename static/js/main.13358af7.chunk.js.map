{"version":3,"sources":["lib/enviosGet.js","lib/enviosPost.js","App.js","index.js"],"names":["myRequest","Request","method","headers","Authorization","process","mode","cache","App","useState","orders","setOrders","items","setItems","activeOrder","setActiveOrder","id","setId","sku","setSku","name","setName","quantity","setQuantity","price","setPrice","disabled","setDisabled","setRequired","open","setOpen","fetchOrder","a","fetch","getOrder","then","response","json","object","console","log","pushOrder","map","key","push","handleClose","useEffect","className","Container","classname","fluid","Row","md","Col","Button","onClick","Math","floor","random","size","color","style","float","width","lg","Object","keys","length","order","handleItems","Form","FormGroup","row","sm","padding","Input","required","value","placeholder","onChange","event","target","Table","item","scope","margin","type","UncontrolledPopover","trigger","placement","PopoverHeader","PopoverBody","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13358af7.chunk.js","sourcesContent":["// Set connection to the API by its method request\r\n// Define token key alocated on .env file\r\nconst token = {Authorization: process.env.REACT_APP_TOKEN_PUBLIC_KEY}\r\n\r\n// Define method with its key\r\n    const connect = {\r\n        method: 'get',\r\n        headers: token,\r\n        mode: 'cors',\r\n        cache: 'default'\r\n    };\r\n\r\n// Request data\r\n    const myRequest = new Request('https://eshop-deve.herokuapp.com/api/v2/orders', connect)\r\n\r\nexport default myRequest","// Set connection to the API by its method request\r\n// Define token key\r\nconst token = {Authorization: process.env.REACT_APP_TOKEN_PUBLIC_KEY}\r\n\r\n// Define method with its key\r\n    const connect = {\r\n        method: 'post',\r\n        headers: token,\r\n        mode: 'cors',\r\n        cache: 'default'\r\n    };\r\n\r\n// Request data\r\n    const myRequest = new Request('https://eshop-deve.herokuapp.com/api/v2/orders', connect)\r\n\r\nexport default myRequest","import React, { useState, useEffect } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\r\nimport { UncontrolledPopover, PopoverHeader, PopoverBody, Alert } from 'reactstrap';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\r\nimport { Table } from 'reactstrap';\r\nimport { getOrder, postOrder } from './components/index'\r\n\r\nimport './styles.css'\r\n\r\nconst App = () => {\r\n    // Const to alocate orders and its items\r\n    const [orders, setOrders] = useState({})\r\n    const [items, setItems] = useState({})\r\n    const [activeOrder, setActiveOrder] = useState(0)\r\n\r\n    // Const to alocate new registry information\r\n    const [id, setId] = useState('')\r\n    const [sku, setSku] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [quantity, setQuantity] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    \r\n    // Set new registrys\r\n    const [disabled, setDisabled] = useState(true) \r\n    const [required, setRequired] = useState(true)\r\n    const [open, setOpen] = useState(false);\r\n    \r\n    // Call function to request the json from the API alocated on /src/lib/enviosGet.js\r\n    const fetchOrder = async () => {\r\n        await fetch(getOrder)\r\n                .then((response) => response.json())\r\n                .then((object) => { \r\n                    setOrders(object.orders)\r\n                    console.log(object)\r\n                })\r\n    }\r\n\r\n    // Handle items into its use statement const\r\n    // If json request has not been receive yet then is empty, temporarily handle that case until request is finished\r\n    const handleItems = (order) => {\r\n        if(Object.keys(order).length === 0) {\r\n            console.log(\"Error handling json: empty json\")\r\n        } else {\r\n            setActiveOrder(order)\r\n            setItems(order.items)\r\n\r\n            setActiveOrder(order.id)\r\n\r\n            console.log(order)\r\n            console.log(items)\r\n            console.log(activeOrder)\r\n        }\r\n    }\r\n    \r\n    // Handle new products disabling and enabling its respective controls\r\n    // If enabling set a new random id\r\n    const handleNewProduct = () => {\r\n        setDisabled(!disabled)\r\n\r\n        if(disabled){\r\n            setId(Math.floor(Math.random() * 9999999999999))\r\n        } else {\r\n            setId('')\r\n        }\r\n\r\n    }\r\n\r\n    // Push new item into order\r\n    // Request all camps to save\r\n    const pushOrder = async () => {\r\n        if(id !== \"\" && sku !== \"\" && name !== \"\" && quantity !== \"\" && price !== \"\"){\r\n            setRequired(false)\r\n            orders.map((key) => {\r\n                if(key.id === activeOrder){\r\n                    key.items.push({\"id\": id, \"sku\": sku, \"name\": name, \"quantity\": quantity, \"price\": price})\r\n                    console.log(key.items)\r\n                }\r\n            })\r\n\r\n            setId('')\r\n            setSku('')\r\n            setName('')\r\n            setQuantity('')\r\n            setPrice('')\r\n            setDisabled(!disabled)\r\n        } else {\r\n            setRequired(true)\r\n        }\r\n    }\r\n    \r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n    useEffect(async () => {\r\n        await fetchOrder();\r\n    }, []);\r\n    \r\n    return (\r\n        <div className=\"App\">\r\n            <Container classname=\"themed-container\" fluid={true}>\r\n                <Row className=\"headerBar\" md=\"4\">\r\n                    <Col md=\"12\">\r\n                        <Button onClick={() => handleNewProduct()} className=\"headerButtons\" size=\"lg\" color=\"warning\" style={{float: \"right\", width: \"20%\"}}>New product</Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"body\">\r\n                    <Col className=\"dock\" lg=\"4\">\r\n                        <div className=\"order-list\"> \r\n                            {Object.keys(orders).length === 0 \r\n                            ? <></> \r\n                            : orders.map((order) => <Button className=\"order\" color=\"primary\" onClick={() => handleItems(order)} disabled={!disabled}>Order {order.name}</Button>)}\r\n                        </div>\r\n                    </Col>\r\n                    <Col className=\"order-information\">\r\n                        <Form>\r\n                            <FormGroup row>\r\n                                <Col sm={3} style={{padding: \"0 0 0 1rem\"}}> <Input required disabled value={id} placeholder=\"#\"/> </Col>\r\n                                <Col sm={1} style={{padding: \"0 0 0 1rem\"}}> <Input required onChange={(event) => {setSku(event.target.value)}} value={sku} disabled={disabled} placeholder=\"SKU\" style={{width: \"145%\"}} /> </Col>\r\n                                <Col sm={4} style={{padding: \"0 0 0 2.4rem\"}}> <Input required onChange={(event) => {setName(event.target.value)}} value={name} disabled={disabled} placeholder=\"Name\" style={{width: \"110%\"}}/> </Col>\r\n                                <Col sm={2} style={{padding: \"0 0 0 2.4rem\"}}> <Input required onChange={(event) => {setQuantity(event.target.value)}} value={quantity} disabled={disabled} placeholder=\"Quantity\"/> </Col>\r\n                                <Col sm={2}> <Input required onChange={(event) => {setPrice(event.target.value)}} value={price} disabled={disabled} placeholder=\"Price\"/> </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                        <Table>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>#</th>\r\n                            <th>SKU</th>\r\n                            <th>Name</th>\r\n                            <th>Quantity</th>\r\n                            <th>Price</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Object.keys(items).length === 0 \r\n                            ? <></>\r\n                            : items.map((item) => \r\n                                <tr>\r\n                                    <th scope=\"row\">{item.id}</th>\r\n                                    <td>{item.sku}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.quantity}</td>\r\n                                    <td>{item.price}</td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                        </Table>\r\n                        <Button color=\"info\" disabled={disabled} onClick={handleClickOpen} style={{float: \"right\", margin: \"0 0 0 20px\"}} >Pay</Button>\r\n                        <Button id=\"PopoverFocus\" type=\"button\" color=\"success\" disabled={disabled} onClick={() => pushOrder()} style={{float: \"right\"}} >Add</Button>\r\n                        {!require \r\n                            ? <></>\r\n                            :   <UncontrolledPopover trigger=\"focus\" placement=\"bottom\" target=\"PopoverFocus\">\r\n                                    <PopoverHeader style={{color: \"#DE3232\"}}>Fields required</PopoverHeader>\r\n                                    <PopoverBody>All fields must be completed to continue</PopoverBody>\r\n                                </UncontrolledPopover>}\r\n\r\n                                <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n                                <DialogTitle id=\"alert-dialog-title\">{\"Transaction completed\"}</DialogTitle>\r\n                                <DialogContent>\r\n                                    <DialogContentText id=\"alert-dialog-description\">\r\n                                        Congratulations, your buy has been succesfully completed and your package will arrive soon\r\n                                    </DialogContentText>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                                        Agree\r\n                                    </Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}